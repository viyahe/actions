name: Install Dependencies
description: Github Action for installint dependencies

inputs: 
  npm-install:  
    description: Installs npm package
    default: false
    type: boolean
  pipenv-install:
    description: Installs package from pipfile
    default: false
    type: boolean

runs: 
  using: composite
  steps: 
    # pipenv-install
    - name: Setup python
      if: inputs.pipenv-install
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.0'
        cache: pipenv

    - id: cache-pipenv
      if: inputs.pipenv-install
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: Install dependencies (pipenv)
      if: inputs.pipenv-install && steps.cache-pipenv.outputs.cache-hit != 'true' 
      run: pipenv install --deploy --dev

    # npm-install
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        always-auth: true
        node-version: '14'
        registry-url: https://npm.pkg.github.com
        scope: '@viyahe'

    - uses: actions/cache@v3
        if: inputs.npm-install
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

    - name: Install dependencies (yarn)
      if: inputs.npm-install && steps.yarn-cache.cache-hit != 'true'
      run: yarn install --frozen-lockfile
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}